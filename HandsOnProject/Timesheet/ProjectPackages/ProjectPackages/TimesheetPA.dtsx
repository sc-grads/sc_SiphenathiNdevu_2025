<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/15/2025 9:39:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-ATT0UPK9"
  DTS:CreatorName="LAPTOP-ATT0UPK9\SiphenathiNdevu"
  DTS:DelayValidation="True"
  DTS:DTSID="{411FBB94-E1DB-43F8-A4D6-DB4AF8123E13}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="26"
  DTS:VersionGUID="{2700AC6B-74CA-428C-BD31-1C5BABFB08A6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{A8C97650-A787-4DD8-B0D7-60F9643956C8}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Siphenathi\Siphenathi Ndevu April Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{2AD629AF-6FF3-4673-90E0-6924AC474C45}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Siphenathi\Siphenathi Ndevu May Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1 1]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{7C9BCDDD-DDD0-4A6D-AE77-5C1615152299}"
      DTS:ObjectName="Excel Connection Manager 1 1">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FullFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 3]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{ABBAFE27-B5A4-44C6-A97A-50BA97ED634B}"
      DTS:ObjectName="Excel Connection Manager 3">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Evashan\Evashan Govender April Final Week Timesheet.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 4]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F837FC09-B41A-4545-BF50-A768F4EE5643}"
      DTS:ObjectName="Excel Connection Manager 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Siphenathi\Siphenathi Ndevu April Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 4 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{435F7529-6C9A-4366-A3F7-16E712BA0D36}"
      DTS:ObjectName="Excel Connection Manager 4 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Siphenathi\Siphenathi Ndevu April Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{47C50D37-AFD6-49BD-88F0-D10A670750E9}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package2-{47C50D37-AFD6-49BD-88F0-D10A670750E9}LAPTOP-ATT0UPK9.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2206AB8C-0FAC-498D-9EE9-0EC2AFC7967D}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package2-{2206AB8C-0FAC-498D-9EE9-0EC2AFC7967D}LAPTOP-ATT0UPK9.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E4AD192E-1894-4E34-A744-61257981572C}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB 1 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package3-{E4AD192E-1894-4E34-A744-61257981572C}LAPTOP-ATT0UPK9.TimesheetDB 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D9C355C2-02D2-4469-A9F7-03AD1891BE75}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package2-{D9C355C2-02D2-4469-A9F7-03AD1891BE75}LAPTOP-ATT0UPK9.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 3]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0E23E6F3-DDF1-4100-A283-DDEFE935F7AE}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package2-{0E23E6F3-DDF1-4100-A283-DDEFE935F7AE}LAPTOP-ATT0UPK9.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 4]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{491B4E85-ABE4-403A-A2C8-F41206F350FA}"
      DTS:ObjectName="LAPTOP-ATT0UPK9.TimesheetDB 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-ATT0UPK9;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package3-{491B4E85-ABE4-403A-A2C8-F41206F350FA}LAPTOP-ATT0UPK9.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{919199AA-7DCA-44C3-88EA-9B209E927249}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AuditLogID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E6CD1D0-29E2-4928-8B45-B6D7759749F6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BatchID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3F606AD-3158-402B-9CFF-4CFF98B8AC34}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D061FD07-A506-453A-9B94-2D4D31BD5A7E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23761398-E6BD-42F3-ADE6-A7DA58BB381B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B15F815-1F35-4D56-86B8-5DF2A2C7D91D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::UserName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutedBy">
      <DTS:VariableValue
        DTS:DataType="8">LAPTOP-ATT0UPK9\SiphenathiNdevu</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0A77FB1-09E1-419E-BB95-A6F5BEF8B3D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC2D4C4D-37F6-48EA-A2DF-67E470C65381}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets\Evashan\Evashan Govender April Final Week Timesheet.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9464E7F4-4759-43DB-847C-899B23914791}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3DDDD1C7-0D67-418E-9991-63653273BC53}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InsertCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{04359034-ABA8-4272-BAE5-9F4D303B99CC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LoadRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C1A0FE6-35E3-4326-AD93-B9547906A61E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Messages">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22B08625-8D04-468D-9B30-C9F3CEF85BAC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OperationType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C5B7B6B-EA23-4CF4-A63F-B0DC16B820A8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::PackageName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageName">
      <DTS:VariableValue
        DTS:DataType="8">Package1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DD44863-CD78-4371-95B0-06A2347E68C2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RootFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BCF4EC0-42F6-4494-A640-6624962F5C75}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsDeleted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19388CFE-40B3-4800-B088-5F75E0560CCB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsInserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA95B13F-EEB0-4AB9-97AF-9573DCC939EE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsLoaded">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09FB8FF8-FBD0-488F-AC29-89D58184C3E7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22D750F6-2E01-4B67-8C0F-E120C9422370}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RunDateUtc">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2025 10:00:30 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8374AD14-C60A-47B3-87C0-91ABFD9C2E1F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RunStatus">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A5BF3A08-C7A2-40D9-A8D0-92D1313ED02F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0BA3EC76-7D4E-4485-B0DE-76932F5084AD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="StartTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2025 10:00:56 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2DAA85B-20BD-4678-B95C-340ABD9F0EAD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{415CFCBC-36C5-4E80-97B9-9954BEA4DBB1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TaskName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D87DBD7-7AC5-412D-91E8-618E640A8EB8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpdateCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{48cd1b3a-56bd-45a6-861e-ec0f248554b3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[Resource]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Resource"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                      name="EmployeeName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[TRIM](#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(Resource)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Key$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                      name="Resource"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Internal Sambe]"
                      dataType="wstr"
                      length="255"
                      name="Internal Sambe" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Work]"
                      dataType="wstr"
                      length="255"
                      name="Work" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                      dataType="wstr"
                      length="255"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                      dataType="wstr"
                      length="255"
                      name="Resource" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="wstr"
                      length="255"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable]"
                      dataType="wstr"
                      length="255"
                      name="Billable" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                      name="Resource" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Employee]) [refTable]
where [refTable].[ConsultantName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[EmployeeName]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup.Inputs[Lookup Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EmployeeName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[EmployeeName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ConsultantName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EmployeeName"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[EmployeeName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                      dataType="wstr"
                      length="100"
                      name="ConsultantName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[Resource]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Resource"
                      lineageId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Sort.Inputs[Sort Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="EmployeeName"
                      lineageId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Resource]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[Resource]"
                      name="Resource">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Resource]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task\Sort.Outputs[Sort Output].Columns[EmployeeName]"
                      name="EmployeeName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Derived Column Output]"
              endId="Package\Data Flow Task\Sort.Inputs[Sort Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Excel Source Output]"
              endId="Package\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Sort Output]"
              endId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]"
              name="Sort Output"
              startId="Package\Data Flow Task\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task 1"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8da71885-5e9b-4d8f-a8bd-4681eb28be94}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task 1"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task 1\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Conditional Split.Outputs[Billable]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Billable"
                  synchronousInputId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]}) == "Billable"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(BillableStatus) == "Billable"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Conditional Split.Outputs[NonBillable]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NonBillable"
                  synchronousInputId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TRIM](#{Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]}) == "Non-Billable"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TRIM(BillableStatus) == "Non-Billable"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Derived Column.Inputs[Derived Column Input].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Billable"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task 1\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]"
                      name="BillableStatus"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,50)[TRIM](#{Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,50)TRIM(Billable)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">BillableTypes</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable]"
                      length="255"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]"
                      name="Billable"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable]"
                      dataType="wstr"
                      length="255"
                      name="Billable" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[Billable]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Error Output].Columns[Billable]"
                      name="Billable" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[BillableType]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[BillableType]) [refTable]
where [refTable].[BillableStatus] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="BillableTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BillableStatus" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[BillableStatus]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[BillableStatus]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">BillableStatus</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[BillableType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 1\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                      lineageId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[BillableStatus]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableTypeID]"
                      dataType="i4"
                      name="BillableTypeID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                      dataType="wstr"
                      length="50"
                      name="BillableStatus" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Sort.Inputs[Sort Input].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Billable"
                      lineageId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Sort.Inputs[Sort Input].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      lineageId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[Billable]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[Billable]"
                      name="Billable">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[BillableStatus]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Sort.Outputs[Sort Output].Columns[BillableStatus]"
                      name="BillableStatus"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 1\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 1].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Billable"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 1].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 2].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Billable"
                      lineageId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output].Columns[Billable]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 2].Columns[BillableStatus]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="BillableStatus"
                      lineageId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output].Columns[BillableStatus]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[Billable]"
                      name="Billable" />
                    <outputColumn
                      refId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1].Columns[BillableStatus]"
                      name="BillableStatus" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task 1.Paths[Billable]"
              endId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 1]"
              name="Billable"
              startId="Package\Data Flow Task 1\Conditional Split.Outputs[Billable]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Derived Column Output]"
              endId="Package\Data Flow Task 1\Conditional Split.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task 1\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Excel Source Output]"
              endId="Package\Data Flow Task 1\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task 1\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task 1\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[NonBillable]"
              endId="Package\Data Flow Task 1\Union All.Inputs[Union All Input 2]"
              name="NonBillable"
              startId="Package\Data Flow Task 1\Conditional Split.Outputs[NonBillable]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Sort Output]"
              endId="Package\Data Flow Task 1\Lookup.Inputs[Lookup Input]"
              name="Sort Output"
              startId="Package\Data Flow Task 1\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Data Flow Task 1.Paths[Union All Output 1]"
              endId="Package\Data Flow Task 1\Sort.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Data Flow Task 1\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task 2"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8b5a87fd-dd0a-4383-8441-7e623eda9bf5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task 2"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task 2\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input].Columns[DescriptionTrimmed]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="DescriptionTrimmed"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\Conditional Split.Outputs[IsNew]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="IsNew"
                  synchronousInputId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]}) &amp;&amp; [TRIM](#{Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]}) != ""</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(DescriptionTrimmed) &amp;&amp; TRIM(DescriptionTrimmed) != ""</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 2\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task 2\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 2\Derived Column.Inputs[Derived Column Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Description"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task 2\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output].Columns[DescriptionTrimmed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="100"
                      lineageId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output].Columns[DescriptionTrimmed]"
                      name="DescriptionTrimmed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,100)[TRIM](#{Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,100)TRIM(Description)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task 2\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 2\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Key$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 2\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 4 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 4 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                      length="255"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                      dataType="wstr"
                      length="255"
                      name="F2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                      dataType="wstr"
                      length="255"
                      name="F8" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                      dataType="wstr"
                      length="255"
                      name="F9" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Internal Sambe]"
                      dataType="wstr"
                      length="255"
                      name="Internal Sambe" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Work]"
                      dataType="wstr"
                      length="255"
                      name="Work" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                      dataType="wstr"
                      length="255"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                      dataType="wstr"
                      length="255"
                      name="Resource" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable]"
                      dataType="wstr"
                      length="255"
                      name="Billable" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                      name="Description" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 2\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Activity]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Activity]) [refTable]
where [refTable].[ActivityDescription] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ActivityID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ActivityDescription" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 2\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 3]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 3]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input].Columns[DescriptionTrimmed]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="DescriptionTrimmed"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ActivityDescription</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 2\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 2\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Activity]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task 2\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 3]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 3]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DescriptionTrimmed]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="DescriptionTrimmed"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ActivityDescription]"
                      lineageId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ActivityID]"
                      dataType="i4"
                      name="ActivityID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ActivityDescription]"
                      dataType="wstr"
                      length="100"
                      name="ActivityDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task 2\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task 2\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task 2\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task 2\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task 2\Sort.Inputs[Sort Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Description"
                      lineageId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task 2\Sort.Inputs[Sort Input].Columns[DescriptionTrimmed]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="DescriptionTrimmed"
                      lineageId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output].Columns[DescriptionTrimmed]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task 2\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[Description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[Description]"
                      name="Description">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Data Flow Task 2\Sort.Outputs[Sort Output].Columns[DescriptionTrimmed]"
                      name="DescriptionTrimmed"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output].Columns[DescriptionTrimmed]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task 2.Paths[Derived Column Output]"
              endId="Package\Data Flow Task 2\Sort.Inputs[Sort Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task 2\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task 2.Paths[Excel Source Output]"
              endId="Package\Data Flow Task 2\Derived Column.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\Data Flow Task 2\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Data Flow Task 2.Paths[IsNew]"
              endId="Package\Data Flow Task 2\Lookup.Inputs[Lookup Input]"
              name="IsNew"
              startId="Package\Data Flow Task 2\Conditional Split.Outputs[IsNew]" />
            <path
              refId="Package\Data Flow Task 2.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task 2\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task 2\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task 2.Paths[Sort Output]"
              endId="Package\Data Flow Task 2\Conditional Split.Inputs[Conditional Split Input]"
              name="Sort Output"
              startId="Package\Data Flow Task 2\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{c27e01d3-85c0-4ce4-9c1b-d74b49deefb5}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{a40befc8-8bb8-491f-8bf9-bc1fbbfebd0c}"
        DTS:ObjectName="{20DA5B7A-D98B-4A74-B1B3-FCF07D6E8457}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9bae711a-1ae2-4816-818c-b4d987b5eb09}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input].Columns[ClientName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ClientName"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]}) ==  FALSE  &amp;&amp; [LEN]([TRIM](#{Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]})) &gt; 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(ClientName) ==  FALSE  &amp;&amp; LEN(TRIM(ClientName)) &gt; 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ClientNameTrimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ClientNameTrimmed]"
                          name="ClientNameTrimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)[LEFT](#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]},100)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)LEFT(F1,100)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Key$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 4]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 4]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 2]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 2]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input].Columns[ClientName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ClientName"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 2]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ClientName"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          dataType="wstr"
                          length="255"
                          name="ClientName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Sort.Inputs[Sort Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Sort.Inputs[Sort Input].Columns[ClientNameTrimmed]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="ClientNameTrimmed"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ClientNameTrimmed]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[F1]"
                          name="F1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[F1]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output].Columns[ClientName]"
                          name="ClientName"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[ClientNameTrimmed]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Case 1]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Lookup.Inputs[Lookup Input]"
                  name="Case 1"
                  startId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Outputs[Case 1]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Sort.Inputs[Sort Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Conditional Split.Inputs[Conditional Split Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container 1"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{3b69f6ec-3c3a-4a47-bef6-a1e1fa10d3b6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container 1">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{39e7eabd-1dfa-40b4-8f2f-8888d7bbd49a}"
        DTS:ObjectName="{32B8185B-99D6-4668-A15E-7C4DDD69489A}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\Audit"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{798f06d8-1931-4a87-b604-58ae3913cd71}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Audit"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E4AD192E-1894-4E34-A744-61257981572C}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog&#xA;  (PackageName,TaskName,TableName,RowsLoaded,RunDate,ExecutedBy,EmployeeName,FileName,OperationType)&#xA;VALUES&#xA;  (?,?,?,?,GETUTCDATE(),?,?,?,?);&#xA;&#xA;-- return the newly generated AuditLogID:&#xA;SELECT CAST(SCOPE_IDENTITY() AS INT) AS AuditLogID;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::TaskName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::TableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::RowsLoaded"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::ExecutedBy"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="260" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="OperationType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\Load Leave Staging"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4b49a333-b633-484b-a74b-cb2cea72f1fe}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Leave Staging"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="260"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,260)@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,260)@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[InsertedAT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[InsertedAT]"
                          name="InsertedAT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="260"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,260)[SUBSTRING](@[User::FullFilePath],[LEN](@[User::FullFilePath]) - [FINDSTRING]([REVERSE](@[User::FullFilePath]),"\\",1) + 2,260)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,260)SUBSTRING(@[User::FullFilePath],LEN(@[User::FullFilePath]) - FINDSTRING(REVERSE(@[User::FullFilePath]),"\\",1) + 2,260)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LeaveDef</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1 1]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1 1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="date"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="date"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="r8"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[LeaveStaging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1 1]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 1 1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="260"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[InsertedAT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="InsertedAT"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InsertedAt]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[InsertedAT]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Date]"
                          cachedDataType="date"
                          cachedName="End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateTo]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Date]"
                          cachedDataType="date"
                          cachedName="Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateFrom]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="260"
                          cachedName="EmployeeName"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Consultant]"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Consultant]"
                          dataType="wstr"
                          length="100"
                          name="Consultant" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateFrom]"
                          dataType="wstr"
                          length="20"
                          name="DateFrom" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateTo]"
                          dataType="wstr"
                          length="20"
                          name="DateTo" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveType]"
                          dataType="wstr"
                          length="50"
                          name="LeaveType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="wstr"
                          length="20"
                          name="NumberOfDays" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="wstr"
                          length="10"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          dataType="wstr"
                          length="10"
                          name="SickNote" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          dataType="wstr"
                          length="260"
                          name="FileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InsertedAt]"
                          dataType="dbTimeStamp"
                          name="InsertedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsLoaded</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 1">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsInserted</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 2">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsDeleted</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count 3">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsUpdated</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1.Inputs[Row Count Input 1]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 11]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2.Inputs[Row Count Input 1]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 12]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3.Inputs[Row Count Input 1]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 13]"
                  endId="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\Populate Leave"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{a1636bd6-b914-4c0f-84c6-9a1f2daee46a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Leave"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E4AD192E-1894-4E34-A744-61257981572C}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.Leave&#xA;( EmployeeID, ActivityID, LeaveStart, LeaveEnd, NumberOfDays,&#xA;  ApprovalFlag, HasSickNote, FileName, InsertedAt )&#xA;SELECT&#xA;  e.EmployeeID,&#xA;  a.ActivityID,&#xA;  TRY_CAST(s.DateFrom AS date),&#xA;  TRY_CAST(s.DateTo   AS date),&#xA;  COALESCE(TRY_CAST(s.NumberOfDays AS decimal(5,2)), 0),&#xA;  CASE WHEN UPPER(s.ApprovalObtained) = 'YES' THEN 'Y' ELSE 'N' END,&#xA;  CASE WHEN UPPER(s.SickNote)       = 'YES' THEN 'Y' ELSE 'N' END,&#xA;  s.FileName,&#xA;  GETDATE()&#xA;FROM dbo.LeaveStaging AS s&#xA;JOIN dbo.Employee e ON s.Consultant = e.ConsultantName&#xA;JOIN dbo.Activity a  ON s.LeaveType  = a.ActivityDescription&#xA;WHERE&#xA;  TRY_CAST(s.DateFrom AS date) IS NOT NULL&#xA;  AND TRY_CAST(s.DateTo   AS date) IS NOT NULL&#xA;  AND TRY_CAST(s.DateFrom AS date) &lt;= TRY_CAST(s.DateTo AS date)&#xA;  AND NOT EXISTS&#xA;  (&#xA;    SELECT 1 &#xA;    FROM dbo.Leave f&#xA;    WHERE f.EmployeeID  = e.EmployeeID&#xA;      AND f.ActivityID  = a.ActivityID&#xA;      AND f.LeaveStart  = TRY_CAST(s.DateFrom AS date)&#xA;      AND f.LeaveEnd    = TRY_CAST(s.DateTo   AS date)&#xA;  );&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5c40384b-1f8a-44d4-9d48-0f8ba014d479}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5f24e74a3b8a49af862c92ceb218849b"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FullFilePath"
              ReadWriteVariables="User::EmployeeName,User::FileName,User::OperationType,User::RowsDeleted,User::RowsInserted,User::RowsLoaded,User::RowsUpdated,User::TableName,User::TaskName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f795193478be4417a195499c4e90d8a3.Properties.Settings.get_Default():ST_f795193478be4417a195499c4e90d8a3.Properties.Sett" +
    "ings")]

namespace ST_f795193478be4417a195499c4e90d8a3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f795193478be4417a195499c4e90d8a3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {

                // TODO: Add your code here
                var full = Dts.Variables["User::FullFilePath"].Value.ToString();
                var folder = new DirectoryInfo(Path.GetDirectoryName(full)).Name;
                Dts.Variables["User::FileName"].Value = Path.GetFileName(full);
                Dts.Variables["User::EmployeeName"].Value = folder;

                Dts.Variables["User::TableName"].Value = "Leave";
                Dts.Variables["User::TaskName"].Value = "LeaveStaging";

                int rowsInserted = (int)Dts.Variables["User::RowsInserted"].Value;
                int rowsUpdated = (int)Dts.Variables["User::RowsUpdated"].Value;
                int rowsDeleted = (int)Dts.Variables["User::RowsDeleted"].Value;

                string operationType = "NONE";

                if (rowsInserted > 0 && rowsUpdated == 0 && rowsDeleted == 0)
                    operationType = "INSERT";
                else if (rowsUpdated > 0 && rowsInserted == 0 && rowsDeleted == 0)
                    operationType = "UPDATE";
                else if (rowsDeleted > 0 && rowsInserted == 0 && rowsUpdated == 0)
                    operationType = "DELETE";
                else if (rowsInserted > 0 || rowsUpdated > 0 || rowsDeleted > 0)
                    operationType = "MIXED";

                Dts.Variables["User::OperationType"].Value = operationType;

                Dts.TaskResult = (int)ScriptResults.Success;
            }

            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task Error", ex.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

#region ScriptResults declaration
/// <summary>
/// This enum provides a convenient shorthand within the scope of this class for setting the
/// result of the script.
/// 
/// This code was generated automatically.
/// </summary>
enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_5f24e74a3b8a49af862c92ceb218849b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1BC996FA-3A36-407C-877D-34C67CF561BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f795193478be4417a195499c4e90d8a3</RootNamespace>
    <AssemblyName>ST_5f24e74a3b8a49af862c92ceb218849b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5f24e74a3b8a49af862c92ceb218849b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5f24e74a3b8a49af862c92ceb218849b</msb:DisplayName>
    <msb:ProjectId>{505FFB3E-A52B-42C5-A9F8-C6559CB74DA6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5f24e74a3b8a49af862c92ceb218849b.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f795193478be4417a195499c4e90d8a3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_f795193478be4417a195499c4e90d8a3")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f795193478be4417a195499c4e90d8a3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f795193478be4417a195499c4e90d8a3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f795193478be4417a195499c4e90d8a3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f795193478be4417a195499c4e90d8a3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f795193478be4417a195499c4e90d8a3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5f24e74a3b8a49af862c92ceb218849b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADnDT2gAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAKjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANgxAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAMBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAM
MgAAAAAAAEgAAAACAAUApCIAAHwOAAABAAAAAAAAACAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDBAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBigVAAAKcxYAAApvFwAACgsCKBAAAApvEQAACnInAABwbxIAAAoGKBgAAApvGQAA
CgIoEAAACm8RAAAKckUAAHBvEgAACgdvGQAACgIoEAAACm8RAAAKcmsAAHBvEgAACnKLAABwbxkA
AAoCKBAAAApvEQAACnKXAABwbxIAAApytQAAcG8ZAAAKAigQAAAKbxEAAApyzwAAcG8SAAAKbxMA
AAqlHwAAAQwCKBAAAApvEQAACnL1AABwbxIAAApvEwAACqUfAAABDQIoEAAACm8RAAAKchkBAHBv
EgAACm8TAAAKpR8AAAETBHI9AQBwEwUIFjEQCS0NEQQtCXJHAQBwEwUrPAkWMRAILQ0RBC0JclUB
AHATBSsoEQQWMQ8ILQwJLQlyYwEAcBMFKxQIFjAJCRYwBREEFjEHcnEBAHATBQIoEAAACm8RAAAK
cn0BAHBvEgAAChEFbxkAAAoCKBAAAAoWbxoAAAreNBMGAigQAAAKbxsAAAoWcqUBAHARBm8cAAAK
cskBAHAWbx0AAAomAigQAAAKF28aAAAK3gAqAAAAQRwAAAAAAAAAAAAAjAEAAIwBAAA0AAAADwAA
AR4CKB4AAAoqHgIoHwAACiqufgEAAAQtHnLLAQBw0AMAAAIoIAAACm8hAAAKcyIAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigjAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAEAQAACN+AAB8BAAAIAYAACNTdHJpbmdzAAAAAJwK
AABAAgAAI1VTANwMAAAQAAAAI0dVSUQAAADsDAAAkAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMA
AAD6ATMAFgAAAQAAACMAAAAFAAAABgAAAAkAAAABAAAAIwAAAAIAAAAQAAAAAQAAAAIAAAADAAAA
BAAAAAEAAAAEAAAAAQAAAAEAAAAAAOoDAQAAAAAABgCLAv8EBgAaA/8EBgDXAewEDwBzBQAABgAE
AmgEBgBuAmgEBgBPAmgEBgABA2gEBgCrAmgEBgDEAmgEBgAbAmgEBgA2AlIDCgDfApkDCgBWAZkD
BgB6BBsEBgAiBBsEBgC6AewEBgDxBRsEBgCxBB8FBgCEBFMEDgCKAdQDDgDrAdQDDgByAT4EBgCf
Af8ECgDCA5kDEgC1BQEBEgCuAAEBBgB1AzQABgCfBDQABgCQBDQABgABABsECgDBBJkDBgAhARsE
BgC3ABsEBgAXBmgEAAAAACsAAAAAAAEAAQABABAAMwQHADkAAQABAAAAEAAmBYIFSQABAAMAAAEQ
AL8FggVdAAMABwADAQAA2AUAAEEABAAKABEAJwSKABEARgGOABEAkgCSAAYGXQCWAFaAyAWZAFaA
JgGZAFAgAAAAAIYAOQQGAAEAPCIAAAAAhhjfBAYAAQBEIgAAAACDGN8EBgABAEwiAAAAAJMIrQSd
AAEAeCIAAAAAkwguAaIAAQB/IgAAAACTCDoBpwABAIciAAAAAJYI+AWtAAIAjiIAAAAAhhjfBAYA
AgCWIgAAAACRGOUEsgACAAAAAQBMAwkA3wQBABEA3wQGABkA3wQKACkA3wQQADEA3wQQADkA3wQQ
AEEA3wQQAEkA3wQQAFEA3wQQAFkA3wQQAGEA3wQQAGkA3wQGAIkA3wQGALEA3wQVAMEA3wQGAHEA
0AUmAMkAsQUrANEAEgQwANkAOAM2AJEAbAM6AOEA8AA+AOkA3wQQAPEA2wA6AOEA5AA+ANkAQgND
AMkABAYBAMkA5gVIAHkAogA6AAEB1QROAHEA3wQGAJEA3wQGAAkByQBXAAkBEwZgAJkA3wRmALkA
3wQGAAgAFACAAAgAGACFACkAcwDtAC4ACwDFAC4AEwDOAC4AGwDtAC4AIwD2AC4AKwAfAS4AMwAf
AS4AOwAlAS4AQwD2AC4ASwAtAS4AUwAfAS4AWwBGAUMAYwCFAEkAcwDtAGEAewCFAGMAawCFABsA
AwABAAQAAwAAALEEtgAAAE4BuwAAAPwFwAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAA
AFIkbEAAAAAAAABlAAAABAAAAAAAAAAAAAAAbgCJAAAAAAAQAAAAAAAAAAAAAAB3AHoDAAAAAAQA
AAAAAAAAAAAAAG4AGwQAAAAAEAAAAAAAAAAAAAAAdwA+AAAAAAAAAAAAAQAAADAFAAAFAAIAAAAA
SW50MzIAU1RfZjc5NTE5MzQ3OGJlNDQxN2ExOTU0OTljNGU5MGQ4YTMAPE1vZHVsZT4AU3lzdGVt
LklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzVmMjRlNzRhM2I4
YTQ5YWY4NjJjOTJjZWIyMTg4NDliAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2Fn
ZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBH
ZXRGaWxlTmFtZQBHZXREaXJlY3RvcnlOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZjI0ZTc0YTNiOGE0OWFmODYyYzky
Y2ViMjE4ODQ5Yi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARmlsZVN5c3RlbUluZm8ARGlyZWN0b3J5SW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUX2Y3OTUxOTM0NzhiZTQ0MTdhMTk1NDk5YzRlOTBkOGEzLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9mNzk1MTkzNDc4YmU0
NDE3YTE5NTQ5OWM0ZTkwZDhhMy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBPYmplY3QAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAlVQBzAGUAcgA6ADoARgB1AGwAbABGAGkAbABl
AFAAYQB0AGgAAB1VAHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUAACVVAHMAZQByADoAOgBFAG0A
cABsAG8AeQBlAGUATgBhAG0AZQAAH1UAcwBlAHIAOgA6AFQAYQBiAGwAZQBOAGEAbQBlAAALTABl
AGEAdgBlAAAdVQBzAGUAcgA6ADoAVABhAHMAawBOAGEAbQBlAAAZTABlAGEAdgBlAFMAdABhAGcA
aQBuAGcAACVVAHMAZQByADoAOgBSAG8AdwBzAEkAbgBzAGUAcgB0AGUAZAAAI1UAcwBlAHIAOgA6
AFIAbwB3AHMAVQBwAGQAYQB0AGUAZAAAI1UAcwBlAHIAOgA6AFIAbwB3AHMARABlAGwAZQB0AGUA
ZAAACU4ATwBOAEUAAA1JAE4AUwBFAFIAVAAADVUAUABEAEEAVABFAAANRABFAEwARQBUAEUAAAtN
AEkAWABFAEQAACdVAHMAZQByADoAOgBPAHAAZQByAGEAdABpAG8AbgBUAHkAcABlAAAjUwBjAHIA
aQBwAHQAIABUAGEAcwBrACAARQByAHIAbwByAAABAHFTAFQAXwBmADcAOQA1ADEAOQAzADQANwA4
AGIAZQA0ADQAMQA3AGEAMQA5ADUANAA5ADkAYwA0AGUAOQAwAGQAOABhADMALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAM1esncC+NtPpq9EJOeeXuIABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVUKBwcODggICA4SPQQgABJlBCAAEmkFIAESbRwDIAAcAyAADgQA
AQ4OBCABARwFIAASgIEIIAUCCA4ODggIAAESgIURgIkFIAASgI0HIAIBDhKAjQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQ
AwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfZjc5NTE5MzQ3OGJlNDQxN2ExOTU0OTljNGU5MGQ4YTMAAAUBAAAA
AAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAAAyAAAAAAAAAAAAABoyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAiBAAAAAAAAAAAAAAiBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAbEBSJAAAAQBsQFIkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEggMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAXgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBUAF8AZgA3ADkANQAxADkAMwA0ADcAOABiAGUANAA0ADEANwBhADEAOQA1ADQAOQA5
AGMANABlADkAMABkADgAYQAzAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADkAMgA5ADgALgAxADYANAA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8ANQBmADIANABlADcANABhADMAYgA4AGEANAA5AGEAZgA4ADYAMgBjADkAMgBjAGUA
YgAyADEAOAA4ADQAOQBiAC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANQBmADIANABlADcANABhADMAYgA4AGEANAA5AGEAZgA4ADYA
MgBjADkAMgBjAGUAYgAyADEAOAA4ADQAOQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGYANwA5ADUAMQA5ADMANAA3ADgAYgBlADQANAAxADcAYQAxADkA
NQA0ADkAOQBjADQAZQA5ADAAZAA4AGEAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOQAyADkAOAAuADEANgA0ADkAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADkAOAAuADEANgA0ADkAMgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAALDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2999f6fa-2f44-46c4-8890-8ef6c393c4bb}"
          DTS:From="Package\Foreach Loop Container 1\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container 1\Load Leave Staging" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{31a638fd-dba9-44cb-9279-a89ae959cd38}"
          DTS:From="Package\Foreach Loop Container 1\Load Leave Staging"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container 1\Populate Leave" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{674045f2-3289-46a7-8d2f-69b10730c2ef}"
          DTS:From="Package\Foreach Loop Container 1\Populate Leave"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container 1\Audit" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{f2fe9e61-8bb6-4eb1-9303-e428c4a9a515}"
          DTS:ObjectName="{1E9569FB-0E05-423A-9887-F8624CB36AC7}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FullFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container 2"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{67764001-76af-47f0-a27a-e2ac13330814}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container 2">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{a8ee46b1-c885-4e62-baf3-30ca9b9e8269}"
        DTS:ObjectName="{85BE59A9-10D2-47A5-9A5C-BB34EA85277E}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\SiphenathiNdevu\OneDrive - Northern Data (Pty) Ltd\Documents\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 2\Audit"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4bdd69a9-7fe4-4b32-aeba-23991616cc20}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Audit"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{491B4E85-ABE4-403A-A2C8-F41206F350FA}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog&#xA;  (PackageName, TaskName, TableName, RowsLoaded, RunDate, ExecutedBy, EmployeeName, FileName, OperationType)&#xA;VALUES (?, ?, ?, ?, GETUTCDATE(), ?, ?, ?, ?);&#xA;&#xA;SELECT CAST(SCOPE_IDENTITY() AS INT) AS AuditLogID;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::TaskName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::TableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::RowsLoaded"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::ExecutedBy"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::FileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="260" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::OperationType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 2\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{1e3c078e-deca-4f78-83d6-a105c6a92e89}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          name="Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          name="Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,4000)[LEFT](#{Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Comments]},4000)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,4000)LEFT(Comments,4000)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="260"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,260)@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,260)@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[LoadedOnUtc]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[LoadedOnUtc]"
                          name="LoadedOnUtc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)[GETUTCDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)GETUTCDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">DefinedTimesheet</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 3]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="nText"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[TimesheetStaging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 4]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-ATT0UPK9.TimesheetDB 4]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="260"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LoadedOnUtc]"
                          cachedDataType="dbTimeStamp"
                          cachedName="LoadedOnUtc"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LoadedOnUtc]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[LoadedOnUtc]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Total Hours]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Total Hours"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WorkDate]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableType]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EmployeeName"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Start Time"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of End Time"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ActivityName]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          dataType="wstr"
                          length="100"
                          name="ProjectName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ActivityName]"
                          dataType="wstr"
                          length="100"
                          name="ActivityName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableType]"
                          dataType="wstr"
                          length="50"
                          name="BillableType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[WorkDate]"
                          dataType="dbDate"
                          name="WorkDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="wstr"
                          length="20"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="wstr"
                          length="50"
                          name="StartTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="wstr"
                          length="50"
                          name="EndTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="wstr"
                          length="50"
                          name="TotalHours" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          dataType="wstr"
                          length="260"
                          name="FileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LoadedOnUtc]"
                          dataType="dbTimeStamp2"
                          name="LoadedOnUtc"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="500"
                          name="Description" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 2\Data Flow Task\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsLoaded</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 2\Data Flow Task\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container 2\Data Flow Task\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 2\Data Flow Task.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container 2\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container 2\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container 2\Data Flow Task.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container 2\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container 2\Data Flow Task\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 2\Data Flow Task.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container 2\Data Flow Task\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 2\Populate  Timesheet"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{c7da655d-78e4-442a-ad1c-9f78aff861a7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate  Timesheet"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{491B4E85-ABE4-403A-A2C8-F41206F350FA}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.Timesheet&#xA;(&#xA;  EmployeeID,&#xA;  ActivityName,&#xA;  ProjectName,&#xA;  BillableType,&#xA;  WorkDate,&#xA;  DayOfWeek,&#xA;  StartTime,&#xA;  EndTime,&#xA;  TotalHours,&#xA;  Comments,&#xA;  FileName,&#xA;  InsertedAt,&#xA;  Description&#xA;)&#xA;SELECT&#xA;  e.EmployeeID,&#xA;  COALESCE(TRIM(s.ActivityName), '')       AS ActivityName,&#xA;  COALESCE(TRIM(s.ProjectName), '')        AS ProjectName,&#xA;  COALESCE(TRIM(s.BillableType), '')       AS BillableType,&#xA;  TRY_CAST(s.WorkDate AS date)             AS WorkDate,&#xA;  DATENAME(weekday, TRY_CAST(s.WorkDate AS date)) AS DayOfWeek,&#xA;  CONVERT(VARCHAR(5), TRY_CAST(s.StartTime AS time(7)), 108) AS StartTime,&#xA;  CONVERT(VARCHAR(5), TRY_CAST(s.EndTime   AS time(7)), 108) AS EndTime,&#xA;  COALESCE(&#xA;    TRY_CAST(&#xA;      DATEDIFF(minute,&#xA;               TRY_CAST(s.StartTime AS time(7)),&#xA;               TRY_CAST(s.EndTime   AS time(7))&#xA;              ) / 60.0&#xA;    AS decimal(5,2)),&#xA;    0.00&#xA;  ) AS TotalHours,&#xA;  s.Comments,&#xA;  s.FileName,&#xA;  GETDATE() AS InsertedAt,&#xA;  s.Description&#xA;FROM dbo.TimesheetStaging AS s&#xA;JOIN dbo.Employee AS e&#xA;  ON s.EmployeeName = e.ConsultantName&#xA;WHERE&#xA;  TRY_CAST(s.WorkDate AS date) IS NOT NULL&#xA;  AND TRY_CAST(s.StartTime AS time(7)) &lt;= TRY_CAST(s.EndTime AS time(7))&#xA;  AND NOT EXISTS (&#xA;    SELECT 1&#xA;    FROM dbo.Timesheet t&#xA;    WHERE t.EmployeeID     = e.EmployeeID&#xA;      AND t.WorkDate       = TRY_CAST(s.WorkDate AS date)&#xA;      AND t.StartTime      = CONVERT(VARCHAR(5), TRY_CAST(s.StartTime AS time(7)), 108)&#xA;      AND t.EndTime        = CONVERT(VARCHAR(5), TRY_CAST(s.EndTime   AS time(7)), 108)&#xA;      AND t.ActivityName   = COALESCE(TRIM(s.ActivityName), '')&#xA;      AND t.ProjectName    = COALESCE(TRIM(s.ProjectName), '')&#xA;      AND t.BillableType   = COALESCE(TRIM(s.BillableType), '')&#xA;      AND ISNULL(t.Description, '') = ISNULL(s.Description, '')&#xA;  );&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 2\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{3951fb24-34f6-4ae7-9d36-8ae42a7555c8}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_49bc7b96e72840b48394042cbe3b860a"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::EmployeeName,User::ExecutedBy,User::FileName,User::OperationType,User::PackageName,User::RowsDeleted,User::RowsInserted,User::RowsLoaded,User::RowsUpdated,User::TableName,User::TaskName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Settings.get_Default():ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Sett" +
    "ings")]

namespace ST_8558a73ac821473e9eefb079a3b5aa92.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_49bc7b96e72840b48394042cbe3b860a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1d7cab38-2f65-47c8-8a1c-c9eccbc48357}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8558a73ac821473e9eefb079a3b5aa92</RootNamespace>
    <AssemblyName>ST_49bc7b96e72840b48394042cbe3b860a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
#endregion

namespace ST_8558a73ac821473e9eefb079a3b5aa92
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            // 🔁 Get the full path of the current Excel file (set by Foreach File Enumerator)
            string fullPath = Dts.Variables["User::FilePath"].Value.ToString(); // <-- Not RootFolder

            // Get file name only
            Dts.Variables["User::FileName"].Value = Path.GetFileName(fullPath);

            // Get parent folder name (e.g., Evashan, Sihle, etc.)
            string folderName = new DirectoryInfo(Path.GetDirectoryName(fullPath)).Name;
            Dts.Variables["User::EmployeeName"].Value = folderName;



            Dts.Variables["User::TableName"].Value = "TimeSheet";
            Dts.Variables["User::TaskName"].Value = "TimeSheetStaging";

            int rowsInserted = (int)Dts.Variables["User::RowsInserted"].Value;
            int rowsUpdated = (int)Dts.Variables["User::RowsUpdated"].Value;
            int rowsDeleted = (int)Dts.Variables["User::RowsDeleted"].Value;

            string operationType = "NONE";

            if (rowsInserted > 0 && rowsUpdated == 0 && rowsDeleted == 0)
            {
                operationType = "INSERT";
            }
            else if (rowsUpdated > 0 && rowsInserted == 0 && rowsDeleted == 0)
            {
                operationType = "UPDATE";
            }
            else if (rowsDeleted > 0 && rowsInserted == 0 && rowsUpdated == 0)
            {
                operationType = "DELETE";
            }
            else if (rowsInserted > 0 || rowsUpdated > 0 || rowsDeleted > 0)
            {
                operationType = "MIXED";
            }

            Dts.Variables["User::OperationType"].Value = operationType;



            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_49bc7b96e72840b48394042cbe3b860a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_49bc7b96e72840b48394042cbe3b860a</msb:DisplayName>
    <msb:ProjectId>{BC3FAE61-3A86-42E4-8630-2ECBE342C985}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_49bc7b96e72840b48394042cbe3b860a.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8558a73ac821473e9eefb079a3b5aa92")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_8558a73ac821473e9eefb079a3b5aa92")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8558a73ac821473e9eefb079a3b5aa92.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8558a73ac821473e9eefb079a3b5aa92.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_49bc7b96e72840b48394042cbe3b860a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOrET2gAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAATjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPwwAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
MQAAAAAAAEgAAAACAAUAUCIAAPQNAAABAAAAAAAAAEQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgCLAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKBigVAAAKbxYAAAoGKBcAAApzGAAACm8ZAAAK
CwIoEAAACm8RAAAKcj0AAHBvEgAACgdvFgAACgIoEAAACm8RAAAKcmMAAHBvEgAACnKDAABwbxYA
AAoCKBAAAApvEQAACnKXAABwbxIAAApytQAAcG8WAAAKAigQAAAKbxEAAApy1wAAcG8SAAAKbxMA
AAqlHgAAAQwCKBAAAApvEQAACnL9AABwbxIAAApvEwAACqUeAAABDQIoEAAACm8RAAAKciEBAHBv
EgAACm8TAAAKpR4AAAETBHJFAQBwEwUIFjEQCS0NEQQtCXJPAQBwEwUrPAkWMRAILQ0RBC0Jcl0B
AHATBSsoEQQWMQ8ILQwJLQlyawEAcBMFKxQIFjAJCRYwBREEFjEHcnkBAHATBQIoEAAACm8RAAAK
coUBAHBvEgAAChEFbxYAAAoCKBAAAAoWbxoAAAoqHgIoGwAACioeAigcAAAKKq5+AQAABC0ecq0B
AHDQAwAAAigdAAAKbx4AAApzHwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4C
KCAAAAoqLnMIAAAGgAMAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
9AMAACN+AABgBAAA5AUAACNTdHJpbmdzAAAAAEQKAAAgAgAAI1VTAGQMAAAQAAAAI0dVSUQAAAB0
DAAAgAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACEAAAAFAAAABgAAAAkA
AAABAAAAIAAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAN4DAQAA
AAAABgB/AssEBgAOA8sEBgDLAbgEDwA/BQAABgD4AVwEBgBiAlwEBgBDAlwEBgD1AlwEBgCfAlwE
BgC4AlwEBgAPAlwEBgAqAkYDCgDTAo0DCgBKAY0DBgAWBA8EBgCuAbgEBgCyBQ8EBgCbBOsEBgBu
BEcEDgB+AcgDDgDfAcgDDgBmATIEBgCTAcsECgC2A40DEgCBBfUAEgCiAPUABgBpAzQABgCJBDQA
BgB6BDQABgABAA8EBgAVAQ8EBgCrAA8EBgDYBVwEAAAAACsAAAAAAAEAAQABABAAJwQHADkAAQAB
AAAAEADyBE4FRQABAAMAAAEQAIsFTgVZAAMABwADAQAApAUAAD0ABAAKABEAGwR4ABEAOgF8ABEA
kgCAAAYGXQCEAFaAlAWHAFaAGgGHAFAgAAAAAIYALQQGAAEA5yEAAAAAhhirBAYAAQDvIQAAAACD
GKsEBgABAPchAAAAAJMIlwSLAAEAIyIAAAAAkwgiAZAAAQAqIgAAAACTCC4BlQABADIiAAAAAJYI
uQWbAAIAOSIAAAAAhhirBAYAAgBBIgAAAACRGLEEoAACAAAAAQBAAwkAqwQBABEAqwQGABkAqwQK
ACkAqwQQADEAqwQQADkAqwQQAEEAqwQQAEkAqwQQAFEAqwQQAFkAqwQQAGEAqwQQAGkAqwQGAIEA
qwQGAKkAqwQVALkAqwQGAHEAnAUkAMEAfQUpAMkABgQuANEALAM0AIkAYAM4ANkA2AA8ANEANgNB
ANkA5AA8AOEAqwQQAOkAzwA4AMEAxQUBAHEAqwQGAIkAqwQGAPkAvQBGAPkA1AVOAJEAqwRUALEA
qwQGAAgAFABuAAgAGABzACkAcwDbAC4ACwCzAC4AEwC8AC4AGwDbAC4AIwDkAC4AKwANAS4AMwAN
AS4AOwATAS4AQwDkAC4ASwAbAS4AUwANAS4AWwA0AUMAYwBzAEkAcwDbAGEAewBzAGMAawBzABsA
AwABAAQAAwAAAJsEpAAAAEIBqQAAAL0FrgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAA
AFIkRUEAAAAAAABlAAAABAAAAAAAAAAAAAAAXACJAAAAAAAQAAAAAAAAAAAAAABlAG4DAAAAAAQA
AAAAAAAAAAAAAFwADwQAAAAAEAAAAAAAAAAAAAAAZQA+AAAAAAAAAAAAAQAAAPwEAAAFAAIAAAAA
AABJbnQzMgBTVF84NTU4YTczYWM4MjE0NzNlOWVlZmIwNzlhM2I1YWE5MgA8TW9kdWxlPgBTeXN0
ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfNDliYzdiOTZl
NzI4NDBiNDgzOTQwNDJjYmUzYjg2MGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAEdldEZpbGVOYW1l
AEdldERpcmVjdG9yeU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZh
aWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzQ5YmM3Yjk2ZTcyODQwYjQ4Mzk0MDQyY2JlM2I4NjBh
LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1
cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAu
Y3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF84NTU4YTczYWM4MjE0NzNlOWVlZmIwNzlhM2I1YWE5
Mi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfODU1OGE3
M2FjODIxNDczZTllZWZiMDc5YTNiNWFhOTIuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRp
bmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRf
VGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgA
AB1VAHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUAACVVAHMAZQByADoAOgBFAG0AcABsAG8AeQBl
AGUATgBhAG0AZQAAH1UAcwBlAHIAOgA6AFQAYQBiAGwAZQBOAGEAbQBlAAATVABpAG0AZQBTAGgA
ZQBlAHQAAB1VAHMAZQByADoAOgBUAGEAcwBrAE4AYQBtAGUAACFUAGkAbQBlAFMAaABlAGUAdABT
AHQAYQBnAGkAbgBnAAAlVQBzAGUAcgA6ADoAUgBvAHcAcwBJAG4AcwBlAHIAdABlAGQAACNVAHMA
ZQByADoAOgBSAG8AdwBzAFUAcABkAGEAdABlAGQAACNVAHMAZQByADoAOgBSAG8AdwBzAEQAZQBs
AGUAdABlAGQAAAlOAE8ATgBFAAANSQBOAFMARQBSAFQAAA1VAFAARABBAFQARQAADUQARQBMAEUA
VABFAAALTQBJAFgARQBEAAAnVQBzAGUAcgA6ADoATwBwAGUAcgBhAHQAaQBvAG4AVAB5AHAAZQAA
cVMAVABfADgANQA1ADgAYQA3ADMAYQBjADgAMgAxADQANwAzAGUAOQBlAGUAZgBiADAANwA5AGEA
MwBiADUAYQBhADkAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AOg1qRn9QxFOjJCEB0wvai8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEIBwYODggICA4EIAAS
YQQgABJlBSABEmkcAyAAHAMgAA4EAAEODgQgAQEcBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQES
TQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfODU1OGE3M2FjODIxNDczZTllZWZiMDc5YTNiNWFhOTIA
AAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAJDEAAAAAAAAAAAAAPjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAx
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAIgQAAAAAAAAAAAAAIgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAEVBUiQAAAEARUFSJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBIIDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAF4DAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAVABfADgANQA1ADgAYQA3ADMAYQBjADgAMgAxADQANwAzAGUAOQBlAGUAZgBiADAA
NwA5AGEAMwBiADUAYQBhADkAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgA5ADIAOQA4AC4AMQA2ADcAMAA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAVABfADQAOQBiAGMANwBiADkANgBlADcAMgA4ADQAMABiADQAOAAzADkANAAwADQAMgBj
AGIAZQAzAGIAOAA2ADAAYQAuAGQAbABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAAMgAwADIANQAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADQAOQBiAGMANwBiADkANgBlADcAMgA4ADQAMABiADQAOAAz
ADkANAAwADQAMgBjAGIAZQAzAGIAOAA2ADAAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwA4ADUANQA4AGEANwAzAGEAYwA4ADIAMQA0ADcAMwBlADkAZQBl
AGYAYgAwADcAOQBhADMAYgA1AGEAYQA5ADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADkAMgA5ADgALgAxADYANwAwADkAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgA5ADgALgAxADYANwAwADkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{b4e5085e-39c2-4053-af07-5322353cfddd}"
          DTS:From="Package\Foreach Loop Container 2\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container 2\Data Flow Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{c4f9d7b4-bc68-4f48-8d73-7149495f5432}"
          DTS:From="Package\Foreach Loop Container 2\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container 2\Populate  Timesheet" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{1ca0cb7b-41a9-4fb1-9c6c-f67a1cec9b14}"
          DTS:From="Package\Foreach Loop Container 2\Populate  Timesheet"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container 2\Audit" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3ffd6639-c065-4eb1-998d-88f25c3e0fea}"
          DTS:ObjectName="{5EC4D8E4-E8E6-4B16-B1FB-6F89FC9EB4B4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{47B5DDF9-7942-4BF7-BA66-57B52FE0342C}"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Data Flow Task 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{61E01231-8DF8-482F-9330-ABF238904F8C}"
      DTS:From="Package\Data Flow Task 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B18F69F9-86B5-4368-9112-D741347871DC}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Data Flow Task 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{FA788709-D899-423B-92B1-A410E7692E0F}"
      DTS:From="Package\Data Flow Task 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Foreach Loop Container 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{1A26ACA7-A8D7-439C-82D5-3EAC79265A53}"
      DTS:From="Package\Foreach Loop Container 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Loop Container 2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task"
          TopLeft="60,86.8666664798392" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task 1"
          TopLeft="275.83332154072,89.6666671668821" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="30.799995082617,23.266665937437" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.8,120"
          Size="204.8,163.2"
          Id="Package\Foreach Loop Container"
          TopLeft="479.166643764411,85.5333345688051" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task 2"
          TopLeft="759.166628465886,92.0666694088113" />
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Foreach Loop Container 1\Audit"
          TopLeft="76.3999950826169,159.199998264313" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging"
          TopLeft="46.8999949460231,53.599998770555" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Foreach Loop Container 1\Populate Leave"
          TopLeft="52.7333279606372,102.999998427033" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container 1\Script Task"
          TopLeft="63.2999943996472,8.06666593743698" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint]"
          TopLeft="193.699994399647,28.866665937437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.5999994536241,24.733332833118"
              Start="0,0"
              End="-61.5999994536241,17.233332833118">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-57.5999994536241,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.5999994536241,0"
                    Point2="-61.5999994536241,0"
                    Point3="-61.5999994536241,4" />
                  <mssgle:LineSegment
                    End="-61.5999994536241,17.233332833118" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 1]"
          TopLeft="217.299994946023,74.399998770555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.1666669853859,49.3999996564784"
              Start="0,0"
              End="-6.66666698538586,49.3999996564784">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,45.3999996564784" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,45.3999996564784"
                    Point2="22.5,49.3999996564784"
                    Point3="18.5,49.3999996564784" />
                  <mssgle:LineSegment
                    End="-6.66666698538586,49.3999996564784" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 2]"
          TopLeft="127.933327960637,144.599998427033">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50.8666671219797,35.39999983728"
              Start="0,0"
              End="43.3666671219797,35.39999983728">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.39999983728" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.39999983728"
                    Point2="0,35.39999983728"
                    Point3="4,35.39999983728" />
                  <mssgle:LineSegment
                    End="43.3666671219797,35.39999983728" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="252.8,252.8"
          Size="252.8,296"
          Id="Package\Foreach Loop Container 1"
          TopLeft="922.066631061171,67.3333346953656" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="210.4,109.066666823361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.4333215407205,0"
              Start="0,0"
              End="57.9333215407205,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.9333215407205,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="426.23332154072,110.466667166882">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.9333222236901,56.666667401923"
              Start="0,0"
              End="45.4333222236901,56.666667401923">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.466661111845,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.466661111845,0"
                    Point2="26.466661111845,0"
                    Point3="26.466661111845,4" />
                  <mssgle:LineSegment
                    End="26.466661111845,52.666667401923" />
                  <mssgle:CubicBezierSegment
                    Point1="26.466661111845,52.666667401923"
                    Point2="26.466661111845,56.666667401923"
                    Point3="30.466661111845,56.666667401923" />
                  <mssgle:LineSegment
                    End="45.4333222236901,56.666667401923" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="683.96664376441,167.133334568805">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.1999847014753,-54.2666651599938"
              Start="0,0"
              End="67.6999847014753,-54.2666651599938">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.5999923507376,0" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5999923507376,0"
                    Point2="37.5999923507376,0"
                    Point3="37.5999923507376,-4" />
                  <mssgle:LineSegment
                    End="37.5999923507376,-50.2666651599938" />
                  <mssgle:CubicBezierSegment
                    Point1="37.5999923507376,-50.2666651599938"
                    Point2="37.5999923507376,-54.2666651599938"
                    Point3="41.5999923507376,-54.2666651599938" />
                  <mssgle:LineSegment
                    End="67.6999847014753,-54.2666651599938" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="834.366628465886,92.0666694088113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.7000025952855,123.266665286554"
              Start="0,0"
              End="80.2000025952855,123.266665286554">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,119.266665286554" />
                  <mssgle:CubicBezierSegment
                    Point1="0,119.266665286554"
                    Point2="0,123.266665286554"
                    Point3="4,123.266665286554" />
                  <mssgle:LineSegment
                    End="80.2000025952855,123.266665286554" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Foreach Loop Container 2\Audit"
          TopLeft="93.233328370419,246.133331187831" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task"
          TopLeft="49.9999950826169,87.5333322907161" />
        <NodeLayout
          Size="173.6,41.6"
          Id="Package\Foreach Loop Container 2\Populate  Timesheet"
          TopLeft="44.1666620680028,152.266667510403" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container 2\Script Task"
          TopLeft="52.499994946023,25.9999993852774" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint]"
          TopLeft="52.499994946023,46.7999993852774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2.49999986340605,61.5333329054387"
              Start="0,0"
              End="-9.99999986340605,61.5333329054387">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.999999863406,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.999999863406,0"
                    Point2="-24.999999863406,0"
                    Point3="-24.999999863406,4" />
                  <mssgle:LineSegment
                    End="-24.999999863406,57.5333329054387" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.999999863406,57.5333329054387"
                    Point2="-24.999999863406,61.5333329054387"
                    Point3="-20.999999863406,61.5333329054387" />
                  <mssgle:LineSegment
                    End="-9.99999986340605,61.5333329054387" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint 1]"
          TopLeft="128.08332857531,129.133332290716">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.1333352196869"
              Start="0,0"
              End="0,15.6333352196869">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.6333352196869" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 2.PrecedenceConstraints[Constraint 2]"
          TopLeft="130.966662068003,193.866667510403">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.4666663024162,52.266663677428"
              Start="0,0"
              End="13.4666663024162,44.766663677428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.133331838714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.133331838714"
                    Point2="0,26.133331838714"
                    Point3="4,26.133331838714" />
                  <mssgle:LineSegment
                    End="9.46666630241623,26.133331838714" />
                  <mssgle:CubicBezierSegment
                    Point1="9.46666630241623,26.133331838714"
                    Point2="13.4666663024162,26.133331838714"
                    Point3="13.4666663024162,30.133331838714" />
                  <mssgle:LineSegment
                    End="13.4666663024162,44.766663677428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="246.4,342.4"
          Size="246.4,385.6"
          Id="Package\Foreach Loop Container 2"
          TopLeft="1244.8666305148,61.2666680708859" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1174.86663106117,215.333334695366">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.9999994536238,38.7333333755203"
              Start="0,0"
              End="62.4999994536238,38.7333333755203">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.9999997268119,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.9999997268119,0"
                    Point2="34.9999997268119,0"
                    Point3="34.9999997268119,4" />
                  <mssgle:LineSegment
                    End="34.9999997268119,34.7333333755203" />
                  <mssgle:CubicBezierSegment
                    Point1="34.9999997268119,34.7333333755203"
                    Point2="34.9999997268119,38.7333333755203"
                    Point3="38.9999997268119,38.7333333755203" />
                  <mssgle:LineSegment
                    End="62.4999994536238,38.7333333755203" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Data Flow Task\Excel Source"
          TopLeft="55.8333302827346,52.8666662990385" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task\OLE DB Destination"
          TopLeft="53.3333304193286,323.266664418711" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Data Flow Task\Sort"
          TopLeft="78.3333290533889,176.799998770555" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Data Flow Task\Derived Column"
          TopLeft="59.9999967217447,110.933332561917" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Data Flow Task\Lookup"
          TopLeft="67.4999963119627,244.133331802554" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="123.899996311963,285.733331802554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.0333341073658,37.5333326161569"
              Start="0,0"
              End="15.0333341073658,30.0333326161569">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.7666663080785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.7666663080785"
                    Point2="0,18.7666663080785"
                    Point3="4,18.7666663080785" />
                  <mssgle:LineSegment
                    End="11.0333341073658,18.7666663080785" />
                  <mssgle:CubicBezierSegment
                    Point1="11.0333341073658,18.7666663080785"
                    Point2="15.0333341073658,18.7666663080785"
                    Point3="15.0333341073658,22.7666663080785" />
                  <mssgle:LineSegment
                    End="15.0333341073658,30.0333326161569" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.2897196650671,23.7666663080785,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="55.8333302827346,73.6666662990385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="4.16666643901004,58.0666662628784"
              Start="0,0"
              End="-3.33333356098996,58.0666662628784">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,54.0666662628784" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,54.0666662628784"
                    Point2="-22.5,58.0666662628784"
                    Point3="-18.5,58.0666662628784" />
                  <mssgle:LineSegment
                    End="-3.33333356098996,58.0666662628784" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="136.399996721745,152.533332561917">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.26666766835578,24.2666662086381"
              Start="0,0"
              End="-9.26666766835578,16.7666662086381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.13333310431904" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.13333310431904"
                    Point2="0,12.133333104319"
                    Point3="-4,12.133333104319" />
                  <mssgle:LineSegment
                    End="-5.26666766835578,12.133333104319" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.26666766835578,12.133333104319"
                    Point2="-9.26666766835578,12.133333104319"
                    Point3="-9.26666766835578,16.133333104319" />
                  <mssgle:LineSegment
                    End="-9.26666766835578,16.7666662086381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Sort Output]"
          TopLeft="125.516662682676,218.399998770555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7333330319987"
              Start="0,0"
              End="0,18.2333330319987">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2333330319987" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Data Flow Task 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task 1\OLE DB Destination"
          TopLeft="55.8333302827346,402.133330536948" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Data Flow Task 1\Excel Source"
          TopLeft="89.166661794815,38.9999997287989" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Data Flow Task 1\Lookup"
          TopLeft="147.499991940956,297.266664599511" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Data Flow Task 1\Sort"
          TopLeft="18.3333323316443,270.399998119672" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Data Flow Task 1\Conditional Split"
          TopLeft="75.8333291899828,155.133332254556" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Data Flow Task 1\Derived Column"
          TopLeft="86.666661931409,97.1333329415984" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Data Flow Task 1\Union All"
          TopLeft="114.999993716677,228.266665340794" />
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Derived Column Output]"
          TopLeft="239.466661931409,117.933332941598">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.0333327414262,57.9999993129571"
              Start="0,0"
              End="-2.53333274142622,57.9999993129571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,53.9999993129571" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,53.9999993129571"
                    Point2="22.5,57.9999993129571"
                    Point3="18.5,57.9999993129571" />
                  <mssgle:LineSegment
                    End="-2.53333274142622,57.9999993129571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Billable]"
          TopLeft="152.633329189983,196.733332254556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.3666645266945,31.533333086239"
              Start="0,0"
              End="22.3666645266945,24.033333086239">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7666665431195" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7666665431195"
                    Point2="0,15.7666665431195"
                    Point3="4,15.7666665431195" />
                  <mssgle:LineSegment
                    End="18.3666645266945,15.7666665431195" />
                  <mssgle:CubicBezierSegment
                    Point1="18.3666645266945,15.7666665431195"
                    Point2="22.3666645266945,15.7666665431195"
                    Point3="22.3666645266945,19.7666665431195" />
                  <mssgle:LineSegment
                    End="22.3666645266945,24.033333086239" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.86301539290275,20.7666665431195,32.0926953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Union All Output 1]"
          TopLeft="114.999993716677,247.899998119672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.866661385033,22.5"
              Start="0,0"
              End="-47.866661385033,15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-43.866661385033,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-43.866661385033,0"
                    Point2="-47.866661385033,0"
                    Point3="-47.866661385033,4" />
                  <mssgle:LineSegment
                    End="-47.866661385033,15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Sort Output]"
          TopLeft="115.933332331644,291.199998119672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.5666596093114,26.8666664798391"
              Start="0,0"
              End="24.0666596093114,26.8666664798391">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="11.7833298046557,0" />
                  <mssgle:CubicBezierSegment
                    Point1="11.7833298046557,0"
                    Point2="15.7833298046557,0"
                    Point3="15.7833298046557,4" />
                  <mssgle:LineSegment
                    End="15.7833298046557,22.8666664798391" />
                  <mssgle:CubicBezierSegment
                    Point1="15.7833298046557,22.8666664798391"
                    Point2="15.7833298046557,26.8666664798391"
                    Point3="19.7833298046557,26.8666664798391" />
                  <mssgle:LineSegment
                    End="24.0666596093114,26.8666664798391" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[NonBillable]"
          TopLeft="152.633329189983,196.733332254556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.3666645266945,31.533333086239"
              Start="0,0"
              End="22.3666645266945,24.033333086239">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7666665431195" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7666665431195"
                    Point2="0,15.7666665431195"
                    Point3="4,15.7666665431195" />
                  <mssgle:LineSegment
                    End="18.3666645266945,15.7666665431195" />
                  <mssgle:CubicBezierSegment
                    Point1="18.3666645266945,15.7666665431195"
                    Point2="22.3666645266945,15.7666665431195"
                    Point3="22.3666645266945,19.7666665431195" />
                  <mssgle:LineSegment
                    End="22.3666645266945,24.033333086239" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.7030153929027,20.7666665431195,49.7726953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Lookup No Match Output]"
          TopLeft="203.899991940956,338.866664599511">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-62.4666616582211,63.2666659374372"
              Start="0,0"
              End="-62.4666616582211,55.7666659374372">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6333329687186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6333329687186"
                    Point2="0,31.6333329687186"
                    Point3="-4,31.6333329687186" />
                  <mssgle:LineSegment
                    End="-58.4666616582211,31.6333329687186" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.4666616582211,31.6333329687186"
                    Point2="-62.4666616582211,31.6333329687186"
                    Point3="-62.4666616582211,35.6333329687186" />
                  <mssgle:LineSegment
                    End="-62.4666616582211,55.7666659374372" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-87.0397175478605,36.6333329687186,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 1.Paths[Excel Source Output]"
          TopLeft="89.166661794815,59.7999997287989">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-2.49999986340603,58.1333332127995"
              Start="0,0"
              End="-9.99999986340603,58.1333332127995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.999999863406,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.999999863406,0"
                    Point2="-24.999999863406,0"
                    Point3="-24.999999863406,4" />
                  <mssgle:LineSegment
                    End="-24.999999863406,54.1333332127995" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.999999863406,54.1333332127995"
                    Point2="-24.999999863406,58.1333332127995"
                    Point3="-20.999999863406,58.1333332127995" />
                  <mssgle:LineSegment
                    End="-9.99999986340603,58.1333332127995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Lookup"
          TopLeft="90.833328370419,317.733331368632" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Derived Column"
          TopLeft="69.1666628875668,120.466665828957" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Excel Source"
          TopLeft="72.4999960387748,49.3999996564786" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
          TopLeft="79.9999956289929,376.999997378389" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Sort"
          TopLeft="102.499994399647,178.533332091835" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Data Flow Task\Conditional Split"
          TopLeft="73.3333293265768,243.733331694073" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Sort Output]"
          TopLeft="150.716661863112,220.133332091835">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.5999996022384"
              Start="0,0"
              End="0,16.0999996022384">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.0999996022384" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="203.633328370419,338.533331368632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.0333327414261,38.4666660097571"
              Start="0,0"
              End="-38.0333327414261,30.9666660097571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-34.0333327414261,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.0333327414261,0"
                    Point2="-38.0333327414261,0"
                    Point3="-38.0333327414261,4" />
                  <mssgle:LineSegment
                    End="-38.0333327414261,30.9666660097571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-93.8397194601761,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="144.033329463171,90.9999996564786">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.466666172478"
              Start="0,0"
              End="0,21.966666172478">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.966666172478" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="145.566662887567,162.066665828957">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.0666684879196,37.2666662628783"
              Start="0,0"
              End="-35.5666684879196,37.2666662628783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.2666662628783" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.2666662628783"
                    Point2="0,37.2666662628783"
                    Point3="-4,37.2666662628783" />
                  <mssgle:LineSegment
                    End="-35.5666684879196,37.2666662628783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Case 1]"
          TopLeft="148.683328848498,285.333331694073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3999996745586"
              Start="0,0"
              End="0,24.8999996745586">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8999996745586" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.2180859375,7.6731443685293,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Data Flow Task 2">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Data Flow Task 2\Lookup"
          TopLeft="48.9333309657045,263.666665684316" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Data Flow Task 2\Derived Column"
          TopLeft="17.4999990438422,95.3333326703972" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Data Flow Task 2\Excel Source"
          TopLeft="70.8333294631708,28.5999998011192" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Data Flow Task 2\OLE DB Destination"
          TopLeft="195.599989618858,314.999998210073" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Data Flow Task 2\Sort"
          TopLeft="184.999989892046,149.066665630076" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Data Flow Task 2\Conditional Split"
          TopLeft="44.7666645266944,186.333332037595" />
        <EdgeLayout
          Id="Package\Data Flow Task 2.Paths[Sort Output]"
          TopLeft="184.999989892046,163.833332037595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-63.4333253653517,22.5"
              Start="0,0"
              End="-63.4333253653517,15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-59.4333253653517,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-59.4333253653517,0"
                    Point2="-63.4333253653517,0"
                    Point3="-63.4333253653517,4" />
                  <mssgle:LineSegment
                    End="-63.4333253653517,15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 2.Paths[Lookup No Match Output]"
          TopLeft="161.733330965704,284.466665684316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.8666586531536,51.3333325257566"
              Start="0,0"
              End="26.3666586531536,51.3333325257566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="12.9333293265768,0" />
                  <mssgle:CubicBezierSegment
                    Point1="12.9333293265768,0"
                    Point2="16.9333293265768,0"
                    Point3="16.9333293265768,4" />
                  <mssgle:LineSegment
                    End="16.9333293265768,47.3333325257566" />
                  <mssgle:CubicBezierSegment
                    Point1="16.9333293265768,47.3333325257566"
                    Point2="16.9333293265768,51.3333325257566"
                    Point3="20.9333293265768,51.3333325257566" />
                  <mssgle:LineSegment
                    End="26.3666586531536,51.3333325257566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-58.7584089546732,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 2.Paths[IsNew]"
          TopLeft="121.566664526694,227.933332037595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.2333335609899,35.7333336467214"
              Start="0,0"
              End="-16.2333335609899,28.2333336467214">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.8666668233607" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.8666668233607"
                    Point2="0,17.8666668233607"
                    Point3="-4,17.8666668233607" />
                  <mssgle:LineSegment
                    End="-12.2333335609899,17.8666668233607" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.2333335609899,17.8666668233607"
                    Point2="-16.2333335609899,17.8666668233607"
                    Point3="-16.2333335609899,21.8666668233607" />
                  <mssgle:LineSegment
                    End="-16.2333335609899,28.2333336467214" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.5873113117449,22.8666668233607,28.9412890625,9.40234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 2.Paths[Excel Source Output]"
          TopLeft="140.833329463171,70.1999998011192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46.9333304193286,25.1333328692781"
              Start="0,0"
              End="-46.9333304193286,17.6333328692781">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.56666643463903" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.56666643463903"
                    Point2="0,12.566666434639"
                    Point3="-4,12.566666434639" />
                  <mssgle:LineSegment
                    End="-42.9333304193286,12.566666434639" />
                  <mssgle:CubicBezierSegment
                    Point1="-42.9333304193286,12.566666434639"
                    Point2="-46.9333304193286,12.566666434639"
                    Point3="-46.9333304193286,16.566666434639" />
                  <mssgle:LineSegment
                    End="-46.9333304193286,17.6333328692781" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task 2.Paths[Derived Column Output]"
          TopLeft="170.299999043842,116.133332670397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.4999908482039,32.9333329596784"
              Start="0,0"
              End="63.4999908482039,25.4333329596784">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59.4999908482039,0" />
                  <mssgle:CubicBezierSegment
                    Point1="59.4999908482039,0"
                    Point2="63.4999908482039,0"
                    Point3="63.4999908482039,4" />
                  <mssgle:LineSegment
                    End="63.4999908482039,25.4333329596784" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 1\Load Leave Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\OLE DB Destination"
          TopLeft="700.999987766147,282.799997707605" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Excel Source"
          TopLeft="63.3333298729527,16.4666665521595" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Derived Column"
          TopLeft="53.3333304193286,96.1999993310373" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Row Count"
          TopLeft="77.4999957655869,172.266665485435" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Excel Source Output]"
          TopLeft="131.533330146141,58.0666665521595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.1333327788778"
              Start="0,0"
              End="0,30.6333327788778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.6333327788778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Derived Column Output]"
          TopLeft="129.733330419329,137.799999331037">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5666653462583,34.4666661543977"
              Start="0,0"
              End="12.5666653462583,26.9666661543977">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.2333330771988" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.2333330771988"
                    Point2="0,17.2333330771988"
                    Point3="4,17.2333330771988" />
                  <mssgle:LineSegment
                    End="8.5666653462583,17.2333330771988" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5666653462583,17.2333330771988"
                    Point2="12.5666653462583,17.2333330771988"
                    Point3="12.5666653462583,21.2333330771988" />
                  <mssgle:LineSegment
                    End="12.5666653462583,26.9666661543977" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 1"
          TopLeft="87.9999986886979,256.999996170402" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 2"
          TopLeft="289.999995678663,275.99999588728" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 1]"
          TopLeft="142.299995765587,213.866665485435">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.9000029231109,43.1333306849666"
              Start="0,0"
              End="14.9000029231109,35.6333306849666">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5666653424833" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5666653424833"
                    Point2="0,21.5666653424833"
                    Point3="4,21.5666653424833" />
                  <mssgle:LineSegment
                    End="10.9000029231109,21.5666653424833" />
                  <mssgle:CubicBezierSegment
                    Point1="10.9000029231109,21.5666653424833"
                    Point2="14.9000029231109,21.5666653424833"
                    Point3="14.9000029231109,25.5666653424833" />
                  <mssgle:LineSegment
                    End="14.9000029231109,35.6333306849666" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 11]"
          TopLeft="226.399998688698,277.799996170402">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.5999969899655,18.9999997168779"
              Start="0,0"
              End="56.0999969899655,18.9999997168779">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.7999984949827,0" />
                  <mssgle:CubicBezierSegment
                    Point1="27.7999984949827,0"
                    Point2="31.7999984949827,0"
                    Point3="31.7999984949827,4" />
                  <mssgle:LineSegment
                    End="31.7999984949827,14.9999997168779" />
                  <mssgle:CubicBezierSegment
                    Point1="31.7999984949827,14.9999997168779"
                    Point2="31.7999984949827,18.9999997168779"
                    Point3="35.7999984949827,18.9999997168779" />
                  <mssgle:LineSegment
                    End="56.0999969899655,18.9999997168779" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="23.7999984949827,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Foreach Loop Container 1\Load Leave Staging\Row Count 3"
          TopLeft="513.999992340803,281.999995797873" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 12]"
          TopLeft="428.399995678663,299.799995842576">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85.5999966621399,0"
              Start="0,0"
              End="78.0999966621399,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="78.0999966621399,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.04999833107,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\Load Leave Staging.Paths[Row Count Output 13]"
          TopLeft="652.399992340803,303.199996752739">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.5999954253435,0"
              Start="0,0"
              End="41.0999954253435,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.0999954253435,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.5499977126718,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 2\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task\Row Count"
          TopLeft="96.666661385033,220.999998463194" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task\Derived Column"
          TopLeft="81.1666650929385,76.5999984659754" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task\Data Conversion"
          TopLeft="81.3333313928711,145.733330762253" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task\OLE DB Destination"
          TopLeft="79.6666640225385,289.466662174199" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container 2\Data Flow Task\Excel Source"
          TopLeft="82.9999987632036,6.99999989569188" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 2\Data Flow Task.Paths[Data Conversion Output]"
          TopLeft="160.399996388952,187.333330762253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.6666677009402"
              Start="0,0"
              End="0,26.1666677009402">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1666677009402" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 2\Data Flow Task.Paths[Row Count Output 1]"
          TopLeft="163.366662703786,262.599998463194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.8666637110049"
              Start="0,0"
              End="0,19.3666637110049">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.3666637110049" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 2\Data Flow Task.Paths[Excel Source Output]"
          TopLeft="155.283331928071,48.5999998956919">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9999985702836"
              Start="0,0"
              End="0,20.4999985702836">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4999985702836" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 2\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="158.449998242905,118.199998465975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.533332296278"
              Start="0,0"
              End="0,20.033332296278">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.033332296278" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>